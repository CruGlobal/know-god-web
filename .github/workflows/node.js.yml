name: Node.js CI

on:
  push:
    branches:
      - jp-gha-conversion
      - staging
      # - master
  pull_request:
    branches:
      - jp-gha-conversion
      - staging
      # - master
  workflow_dispatch:

jobs:
  PreDeployTesting:
    runs-on: ubuntu-latest

    steps:
      - name: Repository checkout
        uses: actions/checkout@v3

      - name: Node.js setup
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: üì¶ Install dependencies
        run: yarn install

      - name: üíÖ Prettier check
        run: yarn prettier:check

      - name: üí® Lint check
        run: yarn lint

      - name: üèóÔ∏è Build app
        run: yarn ng build --prod

  Deploy:
    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/jp-gha-conversion')}}
    runs-on: ubuntu-latest
    environment:
      name: ${{ (github.ref == 'refs/heads/master' && 'prod') || 'stage' }}
    needs: PreDeployTesting
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Repository checkout
        uses: actions/checkout@v3

      - name: Install AWSCLI
        run: pip install --user awscli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@036a4a1ddf2c0e7a782dca6e083c6c53e5d90321
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}

      - name: Node.js setup
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: üì¶ Install dependencies
        run: yarn install

      - name: üèóÔ∏è Build app
        run: yarn ng build --prod

      - name: Copy embed.js
        run: cp embed/embed.js dist/embed.js

      - name: Copy example.html
        run: cp embed/example.html dist/example.html

      - name: Copy mobile directory
        run: cp -r mobile/ dist/mobile/

      # - name: Deploy stage
      # if: github.ref == 'refs/heads/staging'
      #   run: scripts/deploy.staging.sh
      #   shell: bash
      - name: Update Embed Host
        if: github.ref == 'refs/heads/staging'
        run: sed -i "s%$appDomainPlaceholder%$appDomain%g" dist/embed.js
        env:
          appDomainPlaceholder: '{appDomain}'
          appDomain: 'https://stage.knowgod.com'

      - name: Deploy to s3
        if: github.ref == 'refs/heads/staging'
        run: |
          aws s3 sync dist/knowgod $S3_BUCKET --acl 'public-read' --exclude '*.html' --cache-control 'public, max-age=31536000' --delete
          aws s3 sync dist/knowgod $S3_BUCKET --acl 'public-read' --include '*.html' --cache-control 'public, max-age=120' --delete
          aws s3 cp dist/embed.js $S3_BUCKET --acl 'public-read' --cache-control 'public, max-age=600'
          aws s3 sync dist/mobile $S3_BUCKET --acl 'public-read' --cache-control 'public, max-age=3600' --content-type 'application/json'
        env:
          S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

      - name: Deploy prod
        if: github.ref == 'refs/heads/master'
        run: echo "Deploy code goes here."

      - name: Deploy summary
        run: echo "Deployed to the ${{ (github.ref == 'refs/heads/master' && 'prod') || 'stage' }} environment from the ${{ github.ref_name }} branch."
